{
  "application": {
    "name": "User Service API",
    "version": "2.1.0",
    "description": "A comprehensive user management service with authentication and authorization",
    "environment": "production"
  },
  "server": {
    "host": "0.0.0.0",
    "port": 8080,
    "ssl": {
      "enabled": true,
      "certificate": "/etc/ssl/certs/server.crt",
      "private_key": "/etc/ssl/private/server.key",
      "protocols": ["TLSv1.2", "TLSv1.3"]
    },
    "cors": {
      "enabled": true,
      "allowed_origins": [
        "https://app.example.com",
        "https://admin.example.com"
      ],
      "allowed_methods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
      "allowed_headers": ["Content-Type", "Authorization", "X-API-Key"],
      "max_age": 3600
    },
    "rate_limiting": {
      "enabled": true,
      "requests_per_minute": 100,
      "burst_limit": 200,
      "whitelist": ["127.0.0.1", "::1"]
    }
  },
  "database": {
    "primary": {
      "type": "postgresql",
      "host": "db.example.com",
      "port": 5432,
      "database": "userservice",
      "username": "userservice_user",
      "password": "${DB_PASSWORD}",
      "ssl_mode": "require",
      "connection_pool": {
        "min_connections": 5,
        "max_connections": 25,
        "connection_timeout": 30,
        "idle_timeout": 600
      }
    },
    "read_replica": {
      "type": "postgresql",
      "host": "db-read.example.com",
      "port": 5432,
      "database": "userservice",
      "username": "userservice_readonly",
      "password": "${DB_READ_PASSWORD}",
      "ssl_mode": "require",
      "connection_pool": {
        "min_connections": 3,
        "max_connections": 15,
        "connection_timeout": 30,
        "idle_timeout": 300
      }
    }
  },
  "cache": {
    "redis": {
      "enabled": true,
      "host": "cache.example.com",
      "port": 6379,
      "database": 0,
      "password": "${REDIS_PASSWORD}",
      "ssl": true,
      "connection_pool": {
        "max_connections": 20,
        "connection_timeout": 5,
        "socket_timeout": 5,
        "retry_on_timeout": true
      },
      "key_prefix": "userservice:",
      "default_ttl": 3600,
      "compression": {
        "enabled": true,
        "algorithm": "gzip",
        "min_size": 1024
      }
    },
    "memory": {
      "enabled": true,
      "max_size_mb": 256,
      "default_ttl": 300,
      "cleanup_interval": 60
    }
  },
  "authentication": {
    "jwt": {
      "secret": "${JWT_SECRET}",
      "algorithm": "HS256",
      "expiration": 3600,
      "refresh_expiration": 86400,
      "issuer": "userservice.example.com",
      "audience": "userservice-clients"
    },
    "oauth2": {
      "enabled": true,
      "providers": {
        "google": {
          "client_id": "${GOOGLE_CLIENT_ID}",
          "client_secret": "${GOOGLE_CLIENT_SECRET}",
          "redirect_uri": "https://api.example.com/auth/google/callback",
          "scopes": ["email", "profile"]
        },
        "github": {
          "client_id": "${GITHUB_CLIENT_ID}",
          "client_secret": "${GITHUB_CLIENT_SECRET}",
          "redirect_uri": "https://api.example.com/auth/github/callback",
          "scopes": ["user:email"]
        }
      }
    },
    "session": {
      "enabled": true,
      "cookie_name": "userservice_session",
      "secure": true,
      "http_only": true,
      "same_site": "strict",
      "max_age": 3600
    }
  },
  "authorization": {
    "rbac": {
      "enabled": true,
      "roles": {
        "admin": {
          "permissions": ["*"],
          "description": "Full system access"
        },
        "moderator": {
          "permissions": [
            "users:read",
            "users:update",
            "users:suspend",
            "audit:read"
          ],
          "description": "User management and moderation"
        },
        "user": {
          "permissions": [
            "profile:read",
            "profile:update",
            "preferences:read",
            "preferences:update"
          ],
          "description": "Standard user permissions"
        },
        "guest": {
          "permissions": ["public:read"],
          "description": "Read-only public access"
        }
      },
      "resources": {
        "users": ["create", "read", "update", "delete", "suspend"],
        "profile": ["read", "update"],
        "preferences": ["read", "update"],
        "audit": ["read"],
        "public": ["read"]
      }
    }
  },
  "logging": {
    "level": "info",
    "format": "json",
    "output": {
      "console": {
        "enabled": true,
        "colored": false
      },
      "file": {
        "enabled": true,
        "path": "/var/log/userservice/app.log",
        "max_size": "100MB",
        "max_files": 10,
        "compress": true
      },
      "syslog": {
        "enabled": false,
        "facility": "local0",
        "tag": "userservice"
      }
    },
    "structured_logging": {
      "enabled": true,
      "include_caller": true,
      "include_timestamp": true,
      "timestamp_format": "RFC3339"
    }
  },
  "monitoring": {
    "metrics": {
      "enabled": true,
      "endpoint": "/metrics",
      "namespace": "userservice",
      "collection_interval": 30,
      "custom_metrics": {
        "user_registrations": {
          "type": "counter",
          "description": "Total number of user registrations"
        },
        "active_sessions": {
          "type": "gauge",
          "description": "Number of currently active sessions"
        },
        "api_request_duration": {
          "type": "histogram",
          "description": "API request duration in seconds",
          "buckets": [0.01, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5.0, 10.0]
        }
      }
    },
    "health_checks": {
      "enabled": true,
      "endpoint": "/health",
      "checks": {
        "database": {
          "enabled": true,
          "timeout": 5,
          "interval": 30
        },
        "cache": {
          "enabled": true,
          "timeout": 3,
          "interval": 30
        },
        "external_services": {
          "enabled": true,
          "timeout": 10,
          "interval": 60
        }
      }
    },
    "tracing": {
      "enabled": true,
      "jaeger": {
        "endpoint": "http://jaeger:14268/api/traces",
        "service_name": "userservice",
        "sample_rate": 0.1
      }
    }
  },
  "notification": {
    "email": {
      "enabled": true,
      "smtp": {
        "host": "smtp.example.com",
        "port": 587,
        "username": "noreply@example.com",
        "password": "${EMAIL_PASSWORD}",
        "encryption": "tls"
      },
      "templates": {
        "welcome": {
          "subject": "Welcome to {{application.name}}",
          "template_path": "/templates/email/welcome.html"
        },
        "password_reset": {
          "subject": "Password Reset Request",
          "template_path": "/templates/email/password_reset.html"
        },
        "email_verification": {
          "subject": "Please verify your email",
          "template_path": "/templates/email/email_verification.html"
        }
      },
      "rate_limiting": {
        "per_user_per_hour": 5,
        "global_per_minute": 100
      }
    },
    "sms": {
      "enabled": false,
      "provider": "twilio",
      "account_sid": "${TWILIO_ACCOUNT_SID}",
      "auth_token": "${TWILIO_AUTH_TOKEN}",
      "from_number": "+1234567890"
    },
    "push": {
      "enabled": false,
      "firebase": {
        "service_account_key": "/etc/secrets/firebase-service-account.json",
        "project_id": "userservice-notifications"
      }
    }
  },
  "security": {
    "password_policy": {
      "min_length": 8,
      "require_uppercase": true,
      "require_lowercase": true,
      "require_numbers": true,
      "require_special_chars": true,
      "forbidden_passwords": [
        "password", "123456", "qwerty", "admin"
      ],
      "max_age_days": 90,
      "history_count": 5
    },
    "account_lockout": {
      "enabled": true,
      "max_failed_attempts": 5,
      "lockout_duration": 1800,
      "reset_after_success": true
    },
    "encryption": {
      "algorithm": "AES-256-GCM",
      "key_derivation": "PBKDF2",
      "iterations": 100000
    },
    "audit": {
      "enabled": true,
      "events": [
        "user_login",
        "user_logout",
        "user_creation",
        "user_deletion",
        "password_change",
        "role_change",
        "permission_change"
      ],
      "retention_days": 365,
      "export_format": "json"
    }
  },
  "features": {
    "user_registration": {
      "enabled": true,
      "require_email_verification": true,
      "allow_social_registration": true,
      "auto_approve": false
    },
    "user_profiles": {
      "enabled": true,
      "allow_profile_pictures": true,
      "max_picture_size_mb": 5,
      "allowed_picture_formats": ["jpg", "png", "gif", "webp"]
    },
    "two_factor_auth": {
      "enabled": true,
      "methods": ["totp", "sms", "email"],
      "require_for_admins": true,
      "backup_codes": {
        "enabled": true,
        "count": 10
      }
    },
    "api_versioning": {
      "enabled": true,
      "default_version": "v2",
      "supported_versions": ["v1", "v2"],
      "deprecation_warnings": {
        "v1": "2024-12-31"
      }
    }
  },
  "integrations": {
    "analytics": {
      "google_analytics": {
        "enabled": false,
        "tracking_id": "${GA_TRACKING_ID}"
      },
      "mixpanel": {
        "enabled": false,
        "project_token": "${MIXPANEL_TOKEN}"
      }
    },
    "payment": {
      "stripe": {
        "enabled": false,
        "public_key": "${STRIPE_PUBLIC_KEY}",
        "secret_key": "${STRIPE_SECRET_KEY}",
        "webhook_secret": "${STRIPE_WEBHOOK_SECRET}"
      }
    },
    "search": {
      "elasticsearch": {
        "enabled": false,
        "host": "elasticsearch.example.com",
        "port": 9200,
        "index": "userservice_users",
        "username": "${ES_USERNAME}",
        "password": "${ES_PASSWORD}"
      }
    }
  },
  "development": {
    "debug": false,
    "profiling": {
      "enabled": false,
      "memory_profiling": false,
      "cpu_profiling": false
    },
    "mock_external_services": false,
    "auto_reload": false,
    "test_data": {
      "create_sample_users": false,
      "sample_user_count": 100
    }
  }
}